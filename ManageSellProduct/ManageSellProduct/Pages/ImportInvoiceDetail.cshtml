@page
@using ManageSellProduct.Business
@using ManageSellProduct.Enum;
@using ManageSellProduct.Helpers;
@using ManageSellProduct.Models;
@using ManageSellProduct.Providers;

@{
    string noti = string.Empty;
    string code = Request.Query["code"];
    string action = Request.Query["action"];
    string subAction = Request.Query["subAction"];
    ImportInvoice importInvoice = new ImportInvoice();
    DetailImportProduct[] detailImportProducts = new DetailImportProduct[1];

    if (string.IsNullOrWhiteSpace(code) == false && code != CommonEnum.Add)
    {
        importInvoice = ImportInvoiceBusiness.GetImportInvoice(code);

        if (string.IsNullOrWhiteSpace(importInvoice.Code))
        {
            noti = string.Format(CommonEnum.NotExist, "Hóa đơn bán");
        }
        else
        {
            #region Add Sell Detail

            if (subAction == "1")
            {
                DetailImportProduct detailImportProduct = new DetailImportProduct
                        {
                            ProductCode = string.Empty
                        };

                importInvoice.DetailImportProducts = CommonFunction.ArrayAddItem(importInvoice.DetailImportProducts, detailImportProduct);
            }

            #endregion

            #region Delete Sell Detail

            else if (string.IsNullOrWhiteSpace(subAction) == false && action.ToLower() == CommonEnum.Edit)
            {
                DetailImportProduct[] newData = new DetailImportProduct[importInvoice.DetailImportProducts.Length - 1];
                int j = 0;
                for (int i = 0; i < importInvoice.DetailImportProducts.Length; i++)
                {
                    if (subAction != importInvoice.DetailImportProducts[i].ProductCode)
                    {
                        newData[j++] = importInvoice.DetailImportProducts[i];
                    }
                }

                importInvoice.DetailImportProducts = newData;
                ImportInvoiceBusiness.DeleteDetailImportInvoice(code, subAction);
                Response.Redirect($"ImportInvoiceDetail?code={code}&action=edit");
            }

            #endregion

            if (Request.Method == CommonEnum.Post)
            {
                if (action.ToLower() == CommonEnum.Delete)
                {
                    noti = ImportInvoiceBusiness.DeleteImportInvoice(code);
                    goto End;
                }

                #region Logic Edit or Add second
                if (CommonFunction.IsInArray(action.ToLower(), CommonEnum.Edit, CommonEnum.Add, CommonEnum.Save))
                {
                    ImportInvoice editImportInvoice = importInvoice;
                    string cusSupplier = Request.Form[$"Supplier"];
                    string cusAddress = Request.Form[$"Address"];

                    if (CommonFunction.IsNullOrWhiteSpace(cusSupplier, cusAddress))
                    {
                        noti = $"Vui lòng nhập Tên hoặc Địa Chỉ Nhà Cung Cấp";
                        goto End;
                    }

                    editImportInvoice.Supplier = cusSupplier;
                    editImportInvoice.Address = cusAddress;
                    editImportInvoice.DetailImportProducts = new DetailImportProduct[importInvoice.DetailImportProducts.Length];

                    for (int i = 1; i <= importInvoice.DetailImportProducts.Length; i++)
                    {
                        string pCode = Request.Form[$"ProductCode {i}"];
                        string pName = Request.Form[$"ProductName {i}"];
                        int pQuantity = CommonFunction.StringToInt(Request.Form[$"Quantity {i}"]);
                        decimal pPrice = CommonFunction.StringToDecimal(Request.Form[$"Price {i}"]);
                        if (string.IsNullOrWhiteSpace(pName) == false && editImportInvoice.DetailImportProducts.Any(p => p.ProductCode == pCode))
                        {
                            noti = $"Không thể thêm sản phẩm trùng vời mã là {pCode}";
                            goto End;
                        }

                        if (string.IsNullOrWhiteSpace(pName))
                        {
                            noti = $"Vui lòng nhập Tên SP {i}";
                            goto End;
                        }

                        if (pQuantity <= 0)
                        {
                            noti = $"Vui lòng nhập Số Lượng {i} > 0";
                            goto End;
                        }

                        if (pPrice <= 0)
                        {
                            noti = $"Vui lòng nhập Giá {i} > 0";
                            goto End;
                        }

                        editImportInvoice.DetailImportProducts[i - 1].ImportInvoiceCode = importInvoice.Code;
                        editImportInvoice.DetailImportProducts[i - 1].ProductCode = pCode;
                        editImportInvoice.DetailImportProducts[i - 1].ProductName = pName;
                        editImportInvoice.DetailImportProducts[i - 1].Quantity = pQuantity;
                        editImportInvoice.DetailImportProducts[i - 1].Price = pPrice;
                    }

                    noti = ImportInvoiceBusiness.EditImportInvoice(editImportInvoice);
                }

                #endregion
            }

            End:
            if (noti == CommonEnum.Success && CommonEnum.Save == action.ToLower())
            {
                Response.Redirect("ImportInvoice");
            }

            if (noti == CommonEnum.Success && CommonEnum.Edit == action.ToLower())
            {
                importInvoice = ImportInvoiceBusiness.GetImportInvoice(code);
                DetailImportProduct detailImportProduct = new DetailImportProduct
                        {
                            ProductCode = string.Empty
                        };

                importInvoice.DetailImportProducts = CommonFunction.ArrayAddItem(importInvoice.DetailImportProducts, detailImportProduct);
            }
        }
    }

    #region Logic Add

    else
    {
        importInvoice = new ImportInvoice();
        importInvoice.DetailImportProducts = new DetailImportProduct[1];

        if (Request.Method == CommonEnum.Post)
        {
            string iCode = Request.Form[$"Code"];
            if (string.IsNullOrWhiteSpace(iCode) == false)
            {
                importInvoice = ImportInvoiceBusiness.GetImportInvoice(iCode);
                importInvoice.DetailImportProducts = new DetailImportProduct[1];
            }

            if (string.IsNullOrWhiteSpace(importInvoice.Code) == false)
            {
                noti = string.Format(CommonEnum.NotAllowAdd, iCode);

                goto End;
            }

            string cusSupplier = Request.Form[$"Supplier"];
            string cusAddress = Request.Form[$"Address"];
            DateTime iDate = CommonFunction.StringToDate(Request.Form[$"InvoiceDate"], CommonEnum.DateDisplay);

            if (CommonFunction.IsNullOrWhiteSpace(iCode, cusSupplier, cusAddress))
            {
                noti = "Vui lòng nhập Mã Hóa Đơn hoặc Tên hoặc Địa Chỉ Khách Hàng";
                goto End;
            }

            importInvoice.Code = iCode;
            importInvoice.Supplier = cusSupplier;
            importInvoice.Address = cusAddress;
            importInvoice.InvoiceDate = iDate;

            string pCode = Request.Form[$"ProductCode"];
            string pName = Request.Form[$"ProductName"];
            int pQuantity = CommonFunction.StringToInt(Request.Form[$"Quantity"]);
            decimal pPrice = CommonFunction.StringToDecimal(Request.Form[$"Price"]);

            if (string.IsNullOrWhiteSpace(pName))
            {
                noti = "Vui lòng nhập Tên SP";
                goto End;
            }

            if (pQuantity <= 0)
            {
                noti = "Vui lòng nhập Số Lượng > 0";
                goto End;
            }

            if (pPrice <= 0)
            {
                noti = "Vui lòng nhập Giá > 0";
                goto End;
            }

            importInvoice.DetailImportProducts[0].ImportInvoiceCode = importInvoice.Code;
            importInvoice.DetailImportProducts[0].ProductCode = pCode;
            importInvoice.DetailImportProducts[0].ProductName = pName;
            importInvoice.DetailImportProducts[0].Quantity = pQuantity;
            importInvoice.DetailImportProducts[0].Price = pPrice;

            noti = ImportInvoiceBusiness.AddImportInvoice(importInvoice);

            if (subAction == "1")
            {
                Response.Redirect($"ImportInvoiceDetail?code={iCode}&action=edit&subAction=1");
            }

            End:
            if (noti == CommonEnum.Success && string.IsNullOrWhiteSpace(code))
            {
                Response.Redirect("ImportInvoice");
            }
        }
    }

    #endregion
}

<div>
    <!--Edit-->
    @if (string.IsNullOrWhiteSpace(importInvoice.Code) == false && CommonFunction.IsInArray(action?.ToLower(), CommonEnum.Edit, CommonEnum.Save))
    {
        <div class="form-container">
            <form method="post" name="Main" id="form-edit">
                <div class="form-group">
                    <label>Mã Hóa Đơn</label>
                    <input type="text" disabled name="Code" value="@importInvoice.Code">
                </div>

                <div class="form-group">
                    <label>Nhà Cung Cấp</label>
                    <input type="text" name="Supplier" value="@importInvoice.Supplier">
                </div>

                <div class="form-group">
                    <label>Địa Chỉ Nhà Cung Cấp</label>
                    <input type="text" name="Address" value="@importInvoice.Address">
                </div>

                <div class="form-group">
                    <label>Ngày Tạo</label>
                    <input type="date" name="InvoiceDate" value="@CommonFunction.DateToString(importInvoice.InvoiceDate, CommonEnum.DateDisplay)">
                </div>

                @if (importInvoice.DetailImportProducts?.Length > 0)
                {
                    int i = 0;
                    foreach (DetailImportProduct detailImportProduct in importInvoice.DetailImportProducts)
                    {
                        i++;
                        <div class="sub-form" name="Sub">
                            <div class="form-group">
                                <label>Mã SP @i</label>
                                <input type="text" name="ProductCode @i" value="@detailImportProduct.ProductCode">
                            </div>
                            <div class="form-group">
                                <label>Tên SP @i</label>
                                <input type="text" name="ProductName @i" value="@detailImportProduct.ProductName">
                            </div>
                            <div class="form-group">
                                <label>Số Lượng @i</label>
                                <input type="number" name="Quantity @i" value="@detailImportProduct.Quantity">
                            </div>
                            <div class="form-group">
                                <label>Giá @i</label>
                                <input type="number" name="Price @i" value="@detailImportProduct.Price">
                            </div>
                            <div class="form-group">
                                <a class="link link-delete" href="ImportInvoiceDetail?code=@importInvoice.Code&action=edit&subAction=@detailImportProduct.ProductCode">-</a>
                            </div>
                        </div>
                    }
                }

                <div class="form-group">
                    <label></label>
                    <a class="link link-addmore" onclick="importAdd(event, '@importInvoice.Code', 'form-edit', 'edit')" href="">+</a>
                </div>

                <input type="submit" onclick="importAdd(event, '@importInvoice.Code', 'form-edit', 'save')">
            </form>
        </div>
    }

    <!--Detail-->
    @if (string.IsNullOrWhiteSpace(importInvoice.Code) == false && action?.ToLower() == CommonEnum.Detail)
    {
        decimal totalPrice = 0;
        DateTime now = importInvoice.InvoiceDate;
        <div class="invoice">
            <div class="store-info">
                <h1>Tên Cửa Hàng: Min Dress</h1>
                <p>Địa chỉ cửa hàng: 285, CMT8, P.10, Q.3, TP.HCM</p>
                <p>Số điện thoại: 0972-737-308</p>
                <p>Ngày @now.Day, Tháng @now.Month, Năm @now.Year</p>
            </div>

            <div class="customer-info">
                <h2>Thông tin nhà cung cấp</h2>
                <p>Tên nhà cung cấp: @importInvoice.Supplier</p>
                <p>Địa chỉ nhà cung cấp: @importInvoice.Address</p>
            </div>

            <table class="styled-table">
                <thead>
                    <tr>
                        <th>STT</th>
                        <th>Sản phẩm</th>
                        <th>Giá</th>
                        <th>Số lượng</th>
                        <th>Tổng cộng</th>
                    </tr>
                </thead>
                <tbody>
                    @if (importInvoice.DetailImportProducts?.Length > 0)
                    {
                        for (int i = 1; i < 11; i++)
                        {
                            if (i <= importInvoice.DetailImportProducts.Length)
                            {
                                decimal total = importInvoice.DetailImportProducts[i - 1].Quantity * importInvoice.DetailImportProducts[i - 1].Price;
                                totalPrice += total;
                                <tr>
                                    <td>@i</td>
                                    <td>@importInvoice.DetailImportProducts[i-1].ProductName</td>
                                    <td>@CommonFunction.FormatAsVietnameseCurrency(importInvoice.DetailImportProducts[i-1].Price)</td>
                                    <td>@CommonFunction.FormatNumber(importInvoice.DetailImportProducts[i-1].Quantity)</td>
                                    <td>@CommonFunction.FormatAsVietnameseCurrency(total)</td>
                                </tr>
                            }
                            else
                            {
                                <tr>
                                    <td>@i</td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                </tr>
                            }
                        }

                        <tr>
                            <td colspan="5">
                                <div class="total">
                                    Thành Tiền: @CommonFunction.FormatAsVietnameseCurrency(totalPrice)
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="letter-total">
                Viết bằng chữ: @CommonFunction.NumberToWordsVn(totalPrice.ToString())
            </div>
        </div>
    }

    <!--Add-->
    @if (string.IsNullOrWhiteSpace(code) || action?.ToLower() == CommonEnum.Add)
    {
        <div class="form-container">
            <form method="post" name="Main" id="form-add">
                <div class="form-group">
                    <label>Mã Hóa Đơn</label>
                    <input type="text" name="Code">
                </div>

                <div class="form-group">
                  <label>Tên Nhà Cung Cấp</label>
                    <input type="text" name="Supplier">
                </div>

                <div class="form-group">
                    <label>Địa Chỉ Nhà Cung Cấp</label>
                    <input type="text" name="Address">
                </div>

                <div class="form-group">
                    <label>Ngày Tạo</label>
                    <input type="date" name="InvoiceDate" value="@CommonFunction.DateToString(DateTime.Now, CommonEnum.DateDisplay)">
                </div>
                <div class="sub-form" name="Sub">
                    <div class="form-group">
                        <label>Mã SP</label>
                        <input type="text" name="ProductCode">
                    </div>
                    <div class="form-group">
                        <label>Tên SP</label>
                        <input type="text" name="ProductName">
                    </div>
                    <div class="form-group">
                        <label>Số Lượng</label>
                        <input type="number" name="Quantity" value="0">
                    </div>
                    <div class="form-group">
                        <label>Giá</label>
                        <input type="number" name="Price" value="0">
                    </div>
                </div>
                <div class="form-group">
                    <label></label>
                    <a class="link link-addmore" onclick="importAdd(event, 'add', 'form-add', 'add')" href="">+</a>
                </div>

                <input type="submit" value="Lưu">
            </form>
        </div>
    }

    <!--Delete-->
    @if (string.IsNullOrWhiteSpace(importInvoice.Code) == false && action?.ToLower() == CommonEnum.Delete)
    {
        <div class="form-container">
            <div>@string.Format(CommonEnum.ConfirmDelete, importInvoice.Code)</div>
            <br>
            <form class="form-container" method="post">
                <input type="submit" value="Xóa">
            </form>
        </div>
    }

    <!--Noti-->
    @if (noti != CommonEnum.Success)
    {
        <div class="noti">@noti</div>
    }
</div>